<?php

/**
 * This is the model base class for the table "privilegios".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Privilegios".
 *
 * Columns in table "privilegios" available as properties of the model,
 * followed by relations of table "privilegios" available as properties of the model.
 *
 * @property integer $idPRIVILEGIOS
 * @property string $nombre
 * @property integer $ROL_idROL
 * @property integer $TIPO_PRIVILEGIO_idTIPO_PRIVILEGIO
 *
 * @property Rol $rOLIdROL
 * @property TipoPrivilegio $tIPOPRIVILEGIOIdTIPOPRIVILEGIO
 */
abstract class BasePrivilegios extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'privilegios';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Privilegios|Privilegioses', $n);
	}

	public static function representingColumn() {
		return 'nombre';
	}

	public function rules() {
		return array(
			array('idPRIVILEGIOS, ROL_idROL, TIPO_PRIVILEGIO_idTIPO_PRIVILEGIO', 'required'),
			array('idPRIVILEGIOS, ROL_idROL, TIPO_PRIVILEGIO_idTIPO_PRIVILEGIO', 'numerical', 'integerOnly'=>true),
			array('nombre', 'length', 'max'=>45),
			array('nombre', 'default', 'setOnEmpty' => true, 'value' => null),
			array('idPRIVILEGIOS, nombre, ROL_idROL, TIPO_PRIVILEGIO_idTIPO_PRIVILEGIO', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'rOLIdROL' => array(self::BELONGS_TO, 'Rol', 'ROL_idROL'),
			'tIPOPRIVILEGIOIdTIPOPRIVILEGIO' => array(self::BELONGS_TO, 'TipoPrivilegio', 'TIPO_PRIVILEGIO_idTIPO_PRIVILEGIO'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'idPRIVILEGIOS' => Yii::t('app', 'Id Privilegios'),
			'nombre' => Yii::t('app', 'Nombre'),
			'ROL_idROL' => null,
			'TIPO_PRIVILEGIO_idTIPO_PRIVILEGIO' => null,
			'rOLIdROL' => null,
			'tIPOPRIVILEGIOIdTIPOPRIVILEGIO' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('idPRIVILEGIOS', $this->idPRIVILEGIOS);
		$criteria->compare('nombre', $this->nombre, true);
		$criteria->compare('ROL_idROL', $this->ROL_idROL);
		$criteria->compare('TIPO_PRIVILEGIO_idTIPO_PRIVILEGIO', $this->TIPO_PRIVILEGIO_idTIPO_PRIVILEGIO);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}